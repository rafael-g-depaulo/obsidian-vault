TextWithMacros {

// any text with macros in it
textWithMacro = (macro | nonMacroText)+
// anything without a macro
nonMacroText = (~macro any)+

macro = "{{" macroName s* macroBody s* "}}"
macroName = validIdentifier
macroBody = listOf<(macro | macroProp | macroBodyText), space*>

// macro body delimeters to not "eat" }}'s
macroBodyText = notSingle<"}"> | notDouble<"}}"> // notDouble<"}">+
notSingle<char> = ~char any
notDouble<str> = ~str any any
doubleTest =  ~"}}" any any

// single prop from a macro (ie: "PROP_NAME: PROP_VAL")
macroProp = macroPropKey space* macroPropValue
macroPropKey = validIdentifier s* ":"
macroPropValue = listOf<macroPropValueItem, space*>
macroPropValueItem = 
  | macro
  | unorderedList
  | macroPropValueText
macroPropValueText = (~macroPropKey ~macro &macroBodyText any)+


// unordered list
unorderedList = nonemptyListOf<unorderedListItem, nlSpaced>
unorderedListItem = s* "-" s* unorderedListItemValue*
unorderedListItemValue = 
  | macro
  | unorderedListItemText
unorderedListItemText = &macroPropValueText ~"\n" any


// valid name
validIdentifier = (alnum | "-" | "_")+


// spacing stuff
s = ~"\n" space // non newline space
nlSpaced = s* "\n" s* // necessary newline, with optional whitespace around it

spacedList<item> = listOf<item, s*>


}
